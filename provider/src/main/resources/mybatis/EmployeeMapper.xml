<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" " http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.microservice.it.dao.EmployeeDao">
    <resultMap id="employeeResultMap" type="com.microservice.it.entity.Employee">
        <result column="emp_no" jdbcType="BIGINT" property="empNo"/>
        <result column="first_name" jdbcType="VARCHAR" property="firstName"/>
        <result column="last_name" jdbcType="VARCHAR" property="lastName"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="birth_date" jdbcType="TIMESTAMP" property="birthDate"/>
        <result column="hire_date" jdbcType="TIMESTAMP" property="hireDate"/>
    </resultMap>

    <sql id="fields">
        emp_no,first_name,last_name,gender,birth_date,hire_date
    </sql>

    <select id="queryEmployeePage" resultMap="employeeResultMap">
        SELECT
            <include refid="fields"/>
        FROM employee
            limit #{page},#{size}
    </select>

    <select id="countTotalEmployee" resultType="long">
        SELECT
            count(emp_no)
        FROM employee
    </select>

    <insert id="insertEmployee" parameterType="com.microservice.it.entity.Employee">
        insert into employee(
            emp_no,
            first_name,
            last_name,
            gender,
            birth_date,
            hire_date
        ) values(
            #{empNo,jdbcType=BIGINT},
            #{firstName,jdbcType=VARCHAR},
            #{lastName,jdbcType=VARCHAR},
            #{gender,jdbcType=VARCHAR},
            now(),
            now()
        )
    </insert>

    <update id="updateEmployee" parameterType="com.microservice.it.entity.Employee">

    </update>

    <select id="getEmployeeById" parameterType="long" resultMap="employeeResultMap">
        SELECT
             <include refid="fields"/>
        FROM employee
            <where>
                emp_no = #{empNo,jdbcType=BIGINT}
            </where>
    </select>

    <delete id="deleteEmployeeById" parameterType="long">
        delete from employee
        <where>
            emp_no = #{empNo,jdbcType=BIGINT}
        </where>
    </delete>

</mapper>